/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/gameplay_screen/GameplayViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

GameplayViewBase::GameplayViewBase() :
    buttonCallback(this, &GameplayViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    lane1.setPosition(0, 0, 60, 247);
    lane1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    lane1.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lane1.setBorderSize(1);
    add(lane1);

    lane2.setPosition(60, 0, 60, 247);
    lane2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    lane2.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lane2.setBorderSize(1);
    add(lane2);

    lane3.setPosition(120, 0, 60, 247);
    lane3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    lane3.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lane3.setBorderSize(1);
    add(lane3);

    lane4.setPosition(180, 0, 60, 247);
    lane4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    lane4.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lane4.setBorderSize(1);
    add(lane4);

    lane1Button.setXY(0, 247);
    lane1Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID));
    lane1Button.setAction(buttonCallback);
    add(lane1Button);

    lane2Button.setXY(60, 247);
    lane2Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID));
    lane2Button.setAction(buttonCallback);
    add(lane2Button);

    lane3Button.setXY(120, 247);
    lane3Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID));
    lane3Button.setAction(buttonCallback);
    add(lane3Button);

    lane4Button.setXY(180, 247);
    lane4Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID));
    lane4Button.setAction(buttonCallback);
    add(lane4Button);

    tapNote.setPosition(-30, 223, 60, 24);
    tapNote.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    tapNote.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tapNote.setBorderSize(5);
    tapNote.setVisible(false);
    add(tapNote);

    line1.setPosition(0, 223, 240, 24);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1.setPainter(line1Painter);
    line1.setStart(0, 0);
    line1.setEnd(240, 0);
    line1.setLineWidth(1);
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1);

    feedbackText.setXY(74, 71);
    feedbackText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    feedbackText.setLinespacing(0);
    feedbackTextBuffer[0] = 0;
    feedbackText.setWildcard(feedbackTextBuffer);
    feedbackText.resizeToCurrentText();
    feedbackText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EVTL));
    add(feedbackText);
}

GameplayViewBase::~GameplayViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void GameplayViewBase::setupScreen()
{

}

void GameplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &lane1Button)
    {
        //Interaction2
        //When lane1Button clicked call virtual function
        //Call tapLane1
        tapLane1();
    }
    if (&src == &lane2Button)
    {
        //Interaction3
        //When lane2Button clicked call virtual function
        //Call tapLane2
        tapLane2();
    }
    if (&src == &lane3Button)
    {
        //Interaction4
        //When lane3Button clicked call virtual function
        //Call tapLane3
        tapLane3();
    }
    if (&src == &lane4Button)
    {
        //Interaction5
        //When lane4Button clicked call virtual function
        //Call tapLane4
        tapLane4();
    }
}
